{"ast":null,"code":"import axios from \"axios\";\nimport { myAxios, privateAxios } from \"./helper\";\n//create post function\nexport const createPost = postData => {\n  //console.log(postData.content+\" This content iin Post DATA\")\n  return privateAxios.post(`/user/${postData.userId}/category/${postData.categoryId}/posts`, postData).then(response => response.data);\n};\n\n//get All Post\nexport const loadAllPosts = (pageNumber, pageSize) => {\n  return myAxios.get(`/post?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postId&sortDir=desc`).then(response => response.data);\n};\n\n//load single post of given id\n\nexport const loadPost = postId => {\n  return myAxios.get(\"/post/\" + postId).then(response => response.data);\n};\n\n//upload post banner image\nexport const uploadPostImage = (image, postId) => {\n  let formData = new FormData();\n  formData.append(\"image\", image);\n  return privateAxios.post(`/post/image/upload/${postId}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }).then(response => response.data);\n};\n\n//get category wise posts\nexport const loadPostCategoryWise = categoryId => {\n  return privateAxios.get(`/category/${categoryId}/posts`).then(response => response.data);\n};\n//load posts user wise\n\nexport function loadPostUserWise(userId) {\n  return privateAxios.get(`/user/${userId}/posts`).then(response => response.data);\n}\n// delete post by id\n\nexport function deletePostById(postId) {\n  return privateAxios.delete(`/post/${postId}`).then(response => response.data);\n}\n\n//update post\nexport function updatePost(post, postId) {\n  console.log(post.category.categoryId);\n  return privateAxios.put(`/post/${postId}`, post).then(resp => resp.data);\n}","map":{"version":3,"names":["axios","myAxios","privateAxios","createPost","postData","post","userId","categoryId","then","response","data","loadAllPosts","pageNumber","pageSize","get","loadPost","postId","uploadPostImage","image","formData","FormData","append","headers","loadPostCategoryWise","loadPostUserWise","deletePostById","delete","updatePost","console","log","category","put","resp"],"sources":["D:/React/Workspace1/Blog-App/blog-app/src/Services/post-service.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { myAxios, privateAxios } from \"./helper\"\r\n//create post function\r\nexport const createPost = (postData)=>{\r\n    \r\n    //console.log(postData.content+\" This content iin Post DATA\")\r\n    return privateAxios.post(`/user/${postData.userId}/category/${postData.categoryId}/posts`,postData).then(response=> response.data)\r\n}\r\n\r\n//get All Post\r\nexport const loadAllPosts=(pageNumber,pageSize)=>{\r\n    return myAxios.get(`/post?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=postId&sortDir=desc`).then(response=>response.data)\r\n}\r\n\r\n//load single post of given id\r\n\r\nexport const loadPost = (postId)=>{\r\n    return myAxios.get(\"/post/\"+postId).then((response)=>response.data);\r\n}\r\n\r\n//upload post banner image\r\nexport const uploadPostImage=(image,postId)=>{\r\n    let formData = new FormData()\r\n    formData.append(\"image\",image);\r\n    return privateAxios.post(`/post/image/upload/${postId}`,formData,{\r\n        headers:{\r\n            'Content-Type':'multipart/form-data'\r\n        }\r\n    }).then((response)=>response.data)\r\n}\r\n\r\n//get category wise posts\r\nexport const loadPostCategoryWise=(categoryId)=>{\r\n    return privateAxios.get(`/category/${categoryId}/posts`).then(response=>response.data);\r\n}\r\n//load posts user wise\r\n\r\nexport function loadPostUserWise (userId) {\r\n    return privateAxios.get(`/user/${userId}/posts`).then(response=>response.data)\r\n}\r\n// delete post by id\r\n\r\nexport function deletePostById(postId){\r\n    return privateAxios.delete(`/post/${postId}`).then(response=>response.data)\r\n}\r\n\r\n//update post\r\nexport function updatePost(post,postId){\r\n    console.log(post.category.categoryId)\r\n    return privateAxios.put(`/post/${postId}`,post).then((resp)=>resp.data);\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,YAAY,QAAQ,UAAU;AAChD;AACA,OAAO,MAAMC,UAAU,GAAIC,QAAQ,IAAG;EAElC;EACA,OAAOF,YAAY,CAACG,IAAI,CAAE,SAAQD,QAAQ,CAACE,MAAO,aAAYF,QAAQ,CAACG,UAAW,QAAO,EAACH,QAAQ,CAAC,CAACI,IAAI,CAACC,QAAQ,IAAGA,QAAQ,CAACC,IAAI,CAAC;AACtI,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAACA,CAACC,UAAU,EAACC,QAAQ,KAAG;EAC7C,OAAOZ,OAAO,CAACa,GAAG,CAAE,oBAAmBF,UAAW,aAAYC,QAAS,6BAA4B,CAAC,CAACL,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC;AACtI,CAAC;;AAED;;AAEA,OAAO,MAAMK,QAAQ,GAAIC,MAAM,IAAG;EAC9B,OAAOf,OAAO,CAACa,GAAG,CAAC,QAAQ,GAACE,MAAM,CAAC,CAACR,IAAI,CAAEC,QAAQ,IAAGA,QAAQ,CAACC,IAAI,CAAC;AACvE,CAAC;;AAED;AACA,OAAO,MAAMO,eAAe,GAACA,CAACC,KAAK,EAACF,MAAM,KAAG;EACzC,IAAIG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC7BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAACH,KAAK,CAAC;EAC9B,OAAOhB,YAAY,CAACG,IAAI,CAAE,sBAAqBW,MAAO,EAAC,EAACG,QAAQ,EAAC;IAC7DG,OAAO,EAAC;MACJ,cAAc,EAAC;IACnB;EACJ,CAAC,CAAC,CAACd,IAAI,CAAEC,QAAQ,IAAGA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMa,oBAAoB,GAAEhB,UAAU,IAAG;EAC5C,OAAOL,YAAY,CAACY,GAAG,CAAE,aAAYP,UAAW,QAAO,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC;AAC1F,CAAC;AACD;;AAEA,OAAO,SAASc,gBAAgBA,CAAElB,MAAM,EAAE;EACtC,OAAOJ,YAAY,CAACY,GAAG,CAAE,SAAQR,MAAO,QAAO,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC;AAClF;AACA;;AAEA,OAAO,SAASe,cAAcA,CAACT,MAAM,EAAC;EAClC,OAAOd,YAAY,CAACwB,MAAM,CAAE,SAAQV,MAAO,EAAC,CAAC,CAACR,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC;AAC/E;;AAEA;AACA,OAAO,SAASiB,UAAUA,CAACtB,IAAI,EAACW,MAAM,EAAC;EACnCY,OAAO,CAACC,GAAG,CAACxB,IAAI,CAACyB,QAAQ,CAACvB,UAAU,CAAC;EACrC,OAAOL,YAAY,CAAC6B,GAAG,CAAE,SAAQf,MAAO,EAAC,EAACX,IAAI,CAAC,CAACG,IAAI,CAAEwB,IAAI,IAAGA,IAAI,CAACtB,IAAI,CAAC;AAC3E"},"metadata":{},"sourceType":"module","externalDependencies":[]}