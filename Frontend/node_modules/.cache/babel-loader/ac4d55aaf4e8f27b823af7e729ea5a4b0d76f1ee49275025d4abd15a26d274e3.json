{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Workspace1\\\\Blog-App\\\\blog-app\\\\src\\\\components\\\\NewFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { deletePostById, loadAllPosts } from \"../Services/post-service\";\nimport { Col, Container, Pagination, PaginationItem, PaginationLink, Row } from \"reactstrap\";\nimport { Post } from \"./Post\";\nimport { toast } from \"react-toastify\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewFeed() {\n  _s();\n  const [postContent, setPostContent] = useState({\n    content: [],\n    totalPages: \"\",\n    totalElements: \"\",\n    pageSize: \"\",\n    lastPage: false,\n    pageNumber: 0\n  });\n  useEffect(() => {\n    changePage(0);\n  }, []);\n  function deletePost(post) {\n    deletePostById(post.id).then(() => {\n      toast.success(\"Post is Deleted\");\n      setPostContent(prevPostContent => ({\n        ...prevPostContent,\n        content: prevPostContent.content.map(p => p.id === post.id ? {\n          ...p,\n          isVisible: false\n        } : p)\n      }));\n    }).catch(error => {\n      toast.error(\"Error in deleting post\");\n    });\n  }\n  const changePage = (pageNumber = 0, pageSize = 5) => {\n    loadAllPosts(pageNumber, pageSize).then(data => {\n      setPostContent(prevPostContent => ({\n        ...prevPostContent,\n        content: [...prevPostContent.content, ...data.content.map(post => ({\n          ...post,\n          isVisible: true\n        }))],\n        totalPages: data.totalPages,\n        totalElements: data.totalElements,\n        pageSize: data.pageSize,\n        lastPage: data.lastPage,\n        pageNumber: data.pageNumber\n      }));\n    }).catch(error => {\n      toast.error(\"Error in loading Post\");\n    });\n  };\n  const changePageInfinite = () => {\n    changePage(postContent.pageNumber + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          size: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Blogs Count (\", postContent === null || postContent === void 0 ? void 0 : postContent.totalElements, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          dataLength: postContent.content.length,\n          next: changePageInfinite,\n          hasMore: !postContent.lastPage,\n          loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this),\n          endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Yay! You have seen it all\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this),\n          children: postContent === null || postContent === void 0 ? void 0 : postContent.content.map(post => post.isVisible && /*#__PURE__*/_jsxDEV(Post, {\n            post: post,\n            deletePost: deletePost\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(NewFeed, \"ToGuATDmWOhtHMfbI4AbbRrJ4rc=\");\n_c = NewFeed;\nexport default NewFeed;\nvar _c;\n$RefreshReg$(_c, \"NewFeed\");","map":{"version":3,"names":["React","useEffect","useState","deletePostById","loadAllPosts","Col","Container","Pagination","PaginationItem","PaginationLink","Row","Post","toast","InfiniteScroll","jsxDEV","_jsxDEV","NewFeed","_s","postContent","setPostContent","content","totalPages","totalElements","pageSize","lastPage","pageNumber","changePage","deletePost","post","id","then","success","prevPostContent","map","p","isVisible","catch","error","data","changePageInfinite","className","children","md","size","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","loader","endMessage","style","textAlign","_c","$RefreshReg$"],"sources":["D:/React/Workspace1/Blog-App/blog-app/src/components/NewFeed.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { deletePostById, loadAllPosts } from \"../Services/post-service\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Post } from \"./Post\";\r\nimport { toast } from \"react-toastify\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nfunction NewFeed() {\r\n  const [postContent, setPostContent] = useState({\r\n    content: [],\r\n    totalPages: \"\",\r\n    totalElements: \"\",\r\n    pageSize: \"\",\r\n    lastPage: false,\r\n    pageNumber: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    changePage(0);\r\n  }, []);\r\n\r\n  function deletePost(post) {\r\n    deletePostById(post.id)\r\n      .then(() => {\r\n        toast.success(\"Post is Deleted\");\r\n        setPostContent((prevPostContent) => ({\r\n          ...prevPostContent,\r\n          content: prevPostContent.content.map((p) =>\r\n            p.id === post.id ? { ...p, isVisible: false } : p\r\n          ),\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Error in deleting post\");\r\n      });\r\n  }\r\n\r\n  const changePage = (pageNumber = 0, pageSize = 5) => {\r\n    loadAllPosts(pageNumber, pageSize)\r\n      .then((data) => {\r\n        setPostContent((prevPostContent) => ({\r\n          ...prevPostContent,\r\n          content: [\r\n            ...prevPostContent.content,\r\n            ...data.content.map((post) => ({ ...post, isVisible: true })),\r\n          ],\r\n          totalPages: data.totalPages,\r\n          totalElements: data.totalElements,\r\n          pageSize: data.pageSize,\r\n          lastPage: data.lastPage,\r\n          pageNumber: data.pageNumber,\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Error in loading Post\");\r\n      });\r\n  };\r\n\r\n  const changePageInfinite = () => {\r\n    changePage(postContent.pageNumber + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Row>\r\n        <Col md={{ size: 12 }}>\r\n          <h1>Blogs Count ({postContent?.totalElements})</h1>\r\n\r\n          <InfiniteScroll\r\n            dataLength={postContent.content.length}\r\n            next={changePageInfinite}\r\n            hasMore={!postContent.lastPage}\r\n            loader={<h4>Loading...</h4>}\r\n            endMessage={\r\n              <p style={{ textAlign: \"center\" }}>\r\n                <b>Yay! You have seen it all</b>\r\n              </p>\r\n            }\r\n          >\r\n            {postContent?.content.map(\r\n              (post) =>\r\n                post.isVisible && (\r\n                  <Post\r\n                    post={post}\r\n                    key={post.id}\r\n                    deletePost={deletePost}\r\n                  />\r\n                )\r\n            )}\r\n          </InfiniteScroll>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,YAAY,QAAQ,0BAA0B;AACvE,SACEC,GAAG,EACHC,SAAS,EACTC,UAAU,EACVC,cAAc,EACdC,cAAc,EACdC,GAAG,QACE,YAAY;AACnB,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,cAAc,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC;IAC7CkB,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE;EACd,CAAC,CAAC;EAEFxB,SAAS,CAAC,MAAM;IACdyB,UAAU,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,UAAUA,CAACC,IAAI,EAAE;IACxBzB,cAAc,CAACyB,IAAI,CAACC,EAAE,CAAC,CACpBC,IAAI,CAAC,MAAM;MACVlB,KAAK,CAACmB,OAAO,CAAC,iBAAiB,CAAC;MAChCZ,cAAc,CAAEa,eAAe,KAAM;QACnC,GAAGA,eAAe;QAClBZ,OAAO,EAAEY,eAAe,CAACZ,OAAO,CAACa,GAAG,CAAEC,CAAC,IACrCA,CAAC,CAACL,EAAE,KAAKD,IAAI,CAACC,EAAE,GAAG;UAAE,GAAGK,CAAC;UAAEC,SAAS,EAAE;QAAM,CAAC,GAAGD,CAClD;MACF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;MAChBzB,KAAK,CAACyB,KAAK,CAAC,wBAAwB,CAAC;IACvC,CAAC,CAAC;EACN;EAEA,MAAMX,UAAU,GAAGA,CAACD,UAAU,GAAG,CAAC,EAAEF,QAAQ,GAAG,CAAC,KAAK;IACnDnB,YAAY,CAACqB,UAAU,EAAEF,QAAQ,CAAC,CAC/BO,IAAI,CAAEQ,IAAI,IAAK;MACdnB,cAAc,CAAEa,eAAe,KAAM;QACnC,GAAGA,eAAe;QAClBZ,OAAO,EAAE,CACP,GAAGY,eAAe,CAACZ,OAAO,EAC1B,GAAGkB,IAAI,CAAClB,OAAO,CAACa,GAAG,CAAEL,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEO,SAAS,EAAE;QAAK,CAAC,CAAC,CAAC,CAC9D;QACDd,UAAU,EAAEiB,IAAI,CAACjB,UAAU;QAC3BC,aAAa,EAAEgB,IAAI,CAAChB,aAAa;QACjCC,QAAQ,EAAEe,IAAI,CAACf,QAAQ;QACvBC,QAAQ,EAAEc,IAAI,CAACd,QAAQ;QACvBC,UAAU,EAAEa,IAAI,CAACb;MACnB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;MAChBzB,KAAK,CAACyB,KAAK,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;EACN,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/Bb,UAAU,CAACR,WAAW,CAACO,UAAU,GAAG,CAAC,CAAC;EACxC,CAAC;EAED,oBACEV,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9B1B,OAAA,CAACL,GAAG;MAAA+B,QAAA,eACF1B,OAAA,CAACV,GAAG;QAACqC,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAE;QAAAF,QAAA,gBACpB1B,OAAA;UAAA0B,QAAA,GAAI,eAAa,EAACvB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEI,aAAa,EAAC,GAAC;QAAA;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEnDhC,OAAA,CAACF,cAAc;UACbmC,UAAU,EAAE9B,WAAW,CAACE,OAAO,CAAC6B,MAAO;UACvCC,IAAI,EAAEX,kBAAmB;UACzBY,OAAO,EAAE,CAACjC,WAAW,CAACM,QAAS;UAC/B4B,MAAM,eAAErC,OAAA;YAAA0B,QAAA,EAAI;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAE;UAC5BM,UAAU,eACRtC,OAAA;YAAGuC,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAS,CAAE;YAAAd,QAAA,eAChC1B,OAAA;cAAA0B,QAAA,EAAG;YAAyB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CACJ;UAAAN,QAAA,EAEAvB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,OAAO,CAACa,GAAG,CACtBL,IAAI,IACHA,IAAI,CAACO,SAAS,iBACZpB,OAAA,CAACJ,IAAI;YACHiB,IAAI,EAAEA,IAAK;YAEXD,UAAU,EAAEA;UAAW,GADlBC,IAAI,CAACC,EAAE;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CAEP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACa,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CAvFQD,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AAyFhB,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}