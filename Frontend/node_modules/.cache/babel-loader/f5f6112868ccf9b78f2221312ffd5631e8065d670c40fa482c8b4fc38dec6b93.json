{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Workspace1\\\\Blog-App\\\\blog-app\\\\src\\\\components\\\\NewFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { loadAllPosts } from \"../Services/post-service\";\nimport { Col, Container, Pagination, PaginationItem, PaginationLink, Row } from \"reactstrap\";\nimport { Post } from \"./Post\";\nimport { toast } from \"react-toastify\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewFeed() {\n  _s();\n  const [postContent, setPostContent] = useState({\n    content: [],\n    totalPages: \"\",\n    totalElements: \"\",\n    pageSize: \"\",\n    lastPage: false,\n    pageNumber: ''\n  });\n  console.log(postContent);\n  const [currentPage, setCurrentPage] = useState(0);\n  useEffect(() => {\n    //load all posts\n    changePage(currentPage);\n  }, [currentPage]);\n  const changePage = (pageNumber = 0, pageSize = 5) => {\n    loadAllPosts(pageNumber, pageSize).then(data => {\n      console.log(data);\n      setPostContent({\n        content: [...postContent.content, ...data],\n        totalPages: data.totalPages,\n        totalElements: data.totalElements,\n        pageSize: data.pageSize,\n        lastPage: data.lastPage,\n        pageNumber: data.pageNumber\n      });\n      window.scroll(0, 0);\n    }).catch(error => {\n      toast.error(\"Error in loading Post\");\n    });\n  };\n  const changePageInfinite = () => {\n    console.log(\"Page changed\");\n    setCurrentPage(currentPage + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          size: 10,\n          offset: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Blogs Count (\", postContent === null || postContent === void 0 ? void 0 : postContent.totalElements, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          dataLength: postContent.content.length,\n          next: changePageInfinite(),\n          hasMore: postContent.lastPage,\n          children: postContent === null || postContent === void 0 ? void 0 : postContent.content.map(post => /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(NewFeed, \"MfpBr5NlrH99QTjPU+rx1ju6t/4=\");\n_c = NewFeed;\nexport default NewFeed;\nvar _c;\n$RefreshReg$(_c, \"NewFeed\");","map":{"version":3,"names":["React","useEffect","useState","loadAllPosts","Col","Container","Pagination","PaginationItem","PaginationLink","Row","Post","toast","InfiniteScroll","jsxDEV","_jsxDEV","NewFeed","_s","postContent","setPostContent","content","totalPages","totalElements","pageSize","lastPage","pageNumber","console","log","currentPage","setCurrentPage","changePage","then","data","window","scroll","catch","error","changePageInfinite","className","children","md","size","offset","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","map","post","id","_c","$RefreshReg$"],"sources":["D:/React/Workspace1/Blog-App/blog-app/src/components/NewFeed.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { loadAllPosts } from \"../Services/post-service\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Post } from \"./Post\";\r\nimport { toast } from \"react-toastify\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nfunction NewFeed() {\r\n  \r\n  const [postContent, setPostContent] = useState({\r\n    content: [],\r\n    totalPages: \"\",\r\n    totalElements: \"\",\r\n    pageSize: \"\",\r\n    lastPage: false,\r\n    pageNumber:''\r\n  });\r\n  console.log(postContent)\r\n  const [currentPage,setCurrentPage] = useState(0)\r\n  useEffect(() => {\r\n    //load all posts\r\n    changePage(currentPage)\r\n  }, [currentPage]);\r\n  const changePage=(pageNumber=0,pageSize=5)=>{\r\n    loadAllPosts(pageNumber,pageSize).then(data=>{\r\n        console.log(data)\r\n      setPostContent({\r\n        content:[...postContent.content,...data],\r\n        totalPages: data.totalPages,\r\n        totalElements: data.totalElements,\r\n        pageSize: data.pageSize,\r\n        lastPage: data.lastPage,\r\n        pageNumber:data.pageNumber\r\n      });\r\n        \r\n        window.scroll(0,0);\r\n    }).catch(error=>{\r\n        toast.error(\"Error in loading Post\")\r\n    })\r\n  }\r\n  const changePageInfinite =()=>{\r\n      console.log(\"Page changed\")\r\n      setCurrentPage(\r\n        currentPage+1\r\n      )\r\n  }\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Row>\r\n        <Col\r\n          md={{\r\n            size: 10,\r\n            offset: 1,\r\n          }}\r\n        >\r\n          <h1>Blogs Count ({postContent?.totalElements})</h1>\r\n\r\n          <InfiniteScroll\r\n          dataLength={postContent.content.length}\r\n          next={changePageInfinite()}\r\n          hasMore={postContent.lastPage}\r\n          >\r\n              {postContent?.content.map((post) => (\r\n                <Post post={post} key={post.id} />\r\n              ))}\r\n          </InfiniteScroll>\r\n\r\n          {/* <Container className=\"mt-3\">\r\n            <Pagination>\r\n              <PaginationItem disabled={postContent.pageNumber===0} >\r\n                <PaginationLink previous onClick={() => changePage(postContent.pageNumber - 1)} >Previous</PaginationLink>\r\n                \r\n              </PaginationItem>\r\n              {[...Array(postContent.totalPages)].map((item, index) => (\r\n                <PaginationItem onClick={()=>changePage(index)} active={index==postContent.pageNumber} key={index}>\r\n                  <PaginationLink>{index + 1}</PaginationLink>\r\n                </PaginationItem>\r\n              ))}\r\n\r\n              <PaginationItem disabled={postContent.lastPage}>\r\n                <PaginationLink next onClick={() => changePage(postContent.pageNumber + 1)}>Next</PaginationLink>\r\n                \r\n              </PaginationItem>\r\n            </Pagination>\r\n          </Container> */}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\nexport default NewFeed;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}